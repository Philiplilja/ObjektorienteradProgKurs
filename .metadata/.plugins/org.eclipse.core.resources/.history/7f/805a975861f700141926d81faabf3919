import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class Board extends JPanel implements ActionListener {

	private static final long serialVersionUID = 1L;
	private JButton Buttons[];
	private Game gameArray;
	private boolean Player = false;
	private int PlayerMark = 1;

	// Player 1 = X
	// Player 2 = 0

	Board() {

		setLayout(new GridLayout(3, 3));
		Buttons = new JButton[9];

		for (int i = 0; i < Buttons.length; i++) {
			Buttons[i] = new JButton("");
		}

		startGame();

		for (int i = 0; i < Buttons.length; i++) {
			Buttons[i].addActionListener(this);
			add(Buttons[i]);
		}
	}

	public void startGame() {

		gameArray = new Game(this);
		Text();				//Setting no text in cells
		DisableAll(true);	//Disable all buttons

		Player = false;
		PlayerMark = 1;
	}

	private void Reset() {
		startGame(); // Reset the game
	}

	public void actionPerformed(ActionEvent E) {

		// Checks if any key is pressed
		JButton Pressed = (JButton) E.getSource();
		for (int button = 0; button <= 8; button++) {
			if (Pressed == Buttons[button]) {
				newText(Pressed, Player); // Setting new text into cell
				ButtonDisabler(Pressed); // Disable button/cell after being pressed
				gameArray.ArrayInitialize(button / 3, button % 3, PlayerMark); // Arrayindex
				PlayerMark = SwitchTurn(Player); // Switches to next player
			}
		}
	}

	// switches the player's turn
	private int SwitchTurn(boolean last) {
		Player = !last;
		if (last) {
			return 1;
		} else {
			return 2;
		}
	}

	// Default text in cell
	private void Text() {
		for (int i = 0; i < Buttons.length; i++) {
			Buttons[i].setText("");
		}
	}

	// Setting new text in cell to either 0 or X
	private void newText(JButton cellText, boolean Continue) {
		if (Continue == true) {
			cellText.setText("O");
		} else if (Continue == false) {
			cellText.setText("X");
		}
	}

	// Disable button
	private void ButtonDisabler(JButton A) {
		A.setEnabled(false);
	}

	// Disable all buttons
	public void DisableAll(boolean D) {
		for (int i = 0; i < Buttons.length; i++) {
			Buttons[i].setEnabled(D);
		}
	}
}